apiVersion: v1
kind: ConfigMap
metadata:
  name: mdai-collector-config
  namespace: mdai
data:
  collector.yaml: |
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318
      k8s_events:
        namespaces:
          - mdai
    
    processors:
      batch:
        send_batch_size: 1000
        send_batch_max_size: 10000
        timeout: 13s
      filter/severity:
        error_mode: ignore
        logs:
          log_record:
            - 'severity_number < SEVERITY_NUMBER_WARN'
      resource/k8slogstream:
        attributes:
          - key: mdai-logstream
            value: "hub"
            action: upsert
    
    exporters:
      debug: {}
      debug/verbose:
        verbosity: detailed
      awss3/audit:
        s3uploader:
          region: 'us-east-1'
          s3_bucket: 'mdai-collector-logs'
          s3_prefix: 'log'
          file_prefix: 'audit-'
          s3_partition_format: '%Y/%m/%d/%H'
          # FIXME: Need to figure out why we're getting `tls: failed to verify certificate: x509: certificate signed by unknown authority`
          disable_ssl: true
      awss3/collector:
        s3uploader:
          region: 'us-east-1'
          s3_bucket: 'mdai-collector-logs'
          s3_prefix: 'log'
          file_prefix: 'collector-'
          s3_partition_format: '%Y/%m/%d/%H'
          # FIXME: Need to figure out why we're getting `tls: failed to verify certificate: x509: certificate signed by unknown authority`
          disable_ssl: true
      awss3/hub:
        s3uploader:
          region: 'us-east-1'
          s3_bucket: 'mdai-collector-logs'
          s3_prefix: 'log'
          file_prefix: 'hub-'
          s3_partition_format: '%Y/%m/%d/%H'
          # FIXME: Need to figure out why we're getting `tls: failed to verify certificate: x509: certificate signed by unknown authority`
          disable_ssl: true
      awss3/other:
        s3uploader:
          region: 'us-east-1'
          s3_bucket: 'mdai-collector-logs'
          s3_prefix: 'log'
          file_prefix: 'other-'
          s3_partition_format: '%Y/%m/%d/%H'
          # FIXME: Need to figure out why we're getting `tls: failed to verify certificate: x509: certificate signed by unknown authority`
          disable_ssl: true
      # TODO: Figure out volume situation and/or use OTLP export to Valkey writer    
      # file/audit:
      #   path: /data/audit-logs.json
      #   format: json
      #   rotation:
      #     max_days: 0.1
      #     max_backups: 1
      # file/collector:
      #   path: /data/collector-logs.json
      #   format: json
      #   rotation:
      #     max_days: 0.1
      #     max_backups: 1
      # file/mdai_hub:
      #   path: /data/hub-logs.json
      #   format: json
      #   rotation:
      #     max_days: 0.1
      #     max_backups: 1
      # file/other_logs:
      #   path: /data/other-logs.json
      #   format: json
      #   rotation:
      #     max_days: 0.1
      #     max_backups: 1
    
    connectors:
      routing/logstream:
        default_pipelines: [logs/other]
        table:
          - context: resource
            condition: attributes["mdai-logstream"] == "audit"
            pipelines: [logs/s3audit] #, logs/bufferaudit]
          - context: resource
            condition: attributes["mdai-logstream"] == "collector"
            pipelines: [logs/s3collector] #, logs/buffercollector]
          - context: resource
            condition: attributes["mdai-logstream"] == "hub"
            pipelines: [logs/s3hub] #, logs/bufferhub]
    
    extensions:
      cgroupruntime:
        gomaxprocs:
          enabled: true
        gomemlimit:
          enabled: true
    
    service:
      pipelines:
        logs/k8s_events:
          receivers: [k8s_events]
          processors: [resource/k8slogstream]
          exporters: [routing/logstream]
        logs/input:
          receivers: [otlp]
          processors: [filter/severity, batch]
          exporters: [routing/logstream]
          
        logs/bufferaudit:
          receivers: [routing/logstream]
          processors: [batch]
          exporters: [debug, file/audit]
        logs/s3audit:
          receivers: [routing/logstream]
          processors: [batch]
          exporters: [debug, awss3/audit]
          
        logs/bufferhub:
          receivers: [routing/logstream]
          processors: [batch]
          exporters: [debug]
        logs/s3hub:
          receivers: [routing/logstream]
          processors: [batch]
          exporters: [debug, awss3/hub]
          
        logs/buffercollector:
          receivers: [routing/logstream]
          processors: [batch]
          exporters: [debug]
        logs/s3collector:
          receivers: [routing/logstream]
          processors: [batch]
          exporters: [debug, awss3/collector]
          
        logs/other:
          receivers: [routing/logstream]
          processors: [filter/severity, batch]
          exporters: [debug, awss3/other]
