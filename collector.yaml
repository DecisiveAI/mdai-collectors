receivers:
  fluentforward:
    endpoint: 0.0.0.0:8006
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317

processors:
  batch: {}
  groupbyattrs/watcher1:
    keys:
      - application
  deltatocumulative: {}

exporters:
  debug:
  prometheus:
    endpoint: 0.0.0.0:8899
    metric_expiration: 180m
    resource_to_telemetry_conversion:
      enabled: true

  awss3:
    marshaler: otlp_json
    s3uploader:
      endpoint: http://localhost:9000
      file_prefix: loggy-mclogfile_
      s3_bucket: 'logs'
      s3_force_path_style: true
      s3_partition: hour
#    sending_queue:
#      enabled: true
#      num_consumers: 25
#      queue_size: 1000
#  awss3:
#    marshaler: otlp_json
#    sending_queue:
#      enabled: true
#      num_consumers: 25
#      queue_size: 1000
#    s3uploader:
##      region: 'us-east-1'
##      s3_bucket: "mdai-compliance-test"
##      s3_prefix: "compliance-logs"
##      file_prefix: "compliance-log_"
##      compression: "gzip"

connectors:
  datavolume/watcher1:
    label_resource_attributes:
      - application
    count_metric_name: items_application
    bytes_metric_name: bytes_application


service:
  telemetry:
    metrics:
      readers:
        - pull:
            exporter:
              prometheus:
                host: '0.0.0.0'
                port: 8888
  pipelines:
    logs/watcher1:
      receivers: [otlp, fluentforward]
      processors: [batch, groupbyattrs/watcher1]
      exporters: [datavolume/watcher1, awss3]
    metrics/watcheroutput:
      receivers: [datavolume/watcher1]
      processors: [deltatocumulative]
      exporters: [prometheus,debug]