receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318

processors:
  groupbyattrs/watcher1:
    keys:
      - service.name
  groupbyattrs/watcher2:
    keys:
      - service.name
  deltatocumulative: {}

  filter/watcher1:
    logs:
      log_record:
        - 'resource.attributes["watcher_direction"] != "received"'
  filter/watcher2:
    logs:
      log_record:
        - 'resource.attributes["watcher_direction"] != "exported"'

exporters:
  debug:
  prometheus:
    endpoint: 0.0.0.0:8899
    metric_expiration: 180m
    resource_to_telemetry_conversion:
      enabled: true

connectors:
  datavolume/watcher1:
    label_resource_attributes:
      - service.name
    count_metric_name: items_received_by_service_total
    bytes_metric_name: bytes_received_by_service_total
  datavolume/watcher2:
    label_resource_attributes:
      - service.name
    count_metric_name: items_sent_by_service_total
    bytes_metric_name: bytes_sent_by_service_total

extensions:
  cgroupruntime:
    gomaxprocs:
      enabled: true
    gomemlimit:
      enabled: true

service:
  telemetry:
    metrics:
      readers:
        - pull:
            exporter:
              prometheus:
                host: '0.0.0.0'
                port: 8888
  pipelines:
    logs/watcher1:
      receivers: [otlp]
      processors: [filter/watcher1, groupbyattrs/watcher1]
      exporters: [datavolume/watcher1]
    logs/watcher2:
      receivers: [otlp]
      processors: [filter/watcher2, groupbyattrs/watcher2]
      exporters: [datavolume/watcher2]
    metrics/watcheroutput:
      receivers: [datavolume/watcher1, datavolume/watcher2]
      processors: [deltatocumulative]
      exporters: [prometheus,debug]