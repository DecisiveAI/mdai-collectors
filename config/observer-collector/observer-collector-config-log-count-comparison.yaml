receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318

processors:
  groupbyattrs/observer1:
    keys:
      - service.name
  deltatocumulative: {}

  filter/observer1:
    logs:
      log_record:
        - severity_number < SEVERITY_NUMBER_ERROR
#        - 'resource.attributes["observer_direction"] != "received"'

exporters:
  debug:
  prometheus:
    endpoint: 0.0.0.0:8899
    metric_expiration: 180m
    resource_to_telemetry_conversion:
      enabled: true

connectors:
  datavolume/observer1:
    label_resource_attributes:
      - service.name
    count_metric_name: items_received_by_service_total
    logs:
      count_severity_by: "log.severity_number"

  count:
    logs:
      error_logs_by_service_total:
        description: Counted error logs
        conditions:
          - severity_number >= SEVERITY_NUMBER_ERROR
        attributes:
          - key: service.name
            default_value: ""
      warn_logs_by_service_total:
        description: Counted warn logs
        conditions:
          - severity_number < SEVERITY_NUMBER_ERROR and severity_number >= SEVERITY_NUMBER_WARN
        attributes:
          - key: service.name
            default_value: ""
      info_logs_by_service_total:
        description: Counted info logs
        conditions:
          - severity_number < SEVERITY_NUMBER_WARN and severity_number >= SEVERITY_NUMBER_INFO
        attributes:
          - key: service.name
            default_value: ""
      debug_logs_by_service_total:
        description: Counted debug logs
        conditions:
          - severity_number < SEVERITY_NUMBER_INFO and severity_number >= SEVERITY_NUMBER_DEBUG
        attributes:
          - key: service.name
            default_value: ""
      other_logs_by_service_total:
        description: Counted other logs
        conditions:
          - severity_number < SEVERITY_NUMBER_DEBUG
        attributes:
          - key: service.name
            default_value: ""

extensions:
  cgroupruntime:
    gomaxprocs:
      enabled: true
    gomemlimit:
      enabled: true

service:
  telemetry:
    metrics:
      readers:
        - pull:
            exporter:
              prometheus:
                host: '0.0.0.0'
                port: 8888
  pipelines:
    logs/observer1:
      receivers: [otlp]
      processors: [groupbyattrs/observer1]
      exporters: [datavolume/observer1]
    logs/counter:
      receivers: [otlp]
      processors: []
      exporters: [count]
    metrics/observeroutput:
      receivers: [datavolume/observer1, count]
      processors: [batch, deltatocumulative]
      exporters: [prometheus,debug]